@model IEnumerable<Models.User>

@{
ViewBag.Title = "فهرست کاربران" ;
    
}
@if (User.Identity.IsAuthenticated)
{
	var identity = (System.Security.Claims.ClaimsIdentity) User.Identity;
	string role = identity.FindFirst(System.Security.Claims.ClaimTypes.Role).Value;
	if (role == "SuperAdministrator")
	{
		<a href="/users/DownloadReport" class="btn btn-info">دانلود خروجی</a>
	}
}
	<h2>@ViewBag.Title</h2>

        @(Html.Kendo().Grid(Model)
              .Name("Grid")
              .Columns(columns =>
                  {
        columns.Bound(model => model.Role.Title);
        columns.Bound(model => model.CellNum);
        columns.Bound(model => model.FirstName);
        columns.Bound(model => model.LastName);
        columns.Bound(model => model.Code);
        columns.Bound(model => model.IsActive);
        columns.Bound(model => model.CreationDate);
					columns.Bound(item => @item.Id).Title("دستورات").Filterable(false).Groupable(false)
						.Template(@<text>
							          @if (User.Identity.IsAuthenticated)
							          {
								          var identity = (System.Security.Claims.ClaimsIdentity) User.Identity;
								          string role = identity.FindFirst(System.Security.Claims.ClaimTypes.Role).Value;
								          if (role == "SuperAdministrator")
								          {
									          @Html.ActionLink("ویرایش", "Edit", new {id = @item.Id}, new {@class = "k-button"})
									          @Html.ActionLink("حذف", "Delete", new {id = @item.Id}, new {@class = "k-button"})
								          }
							          }
								          </text>).Width(200);  
		})
		.ToolBar(toolbar =>
		{
			if (User.Identity.IsAuthenticated)
			{
				var identity = (System.Security.Claims.ClaimsIdentity) User.Identity;
				string role = identity.FindFirst(System.Security.Claims.ClaimTypes.Role).Value;
				if (role == "SuperAdministrator")
				{
					toolbar.Custom().Action("Create", "Users").Text("افزودن");
				}
			}
		}
	          )         
		        .
	        DataSource(dataSource => dataSource
									.Server()
							
									.Model(model => model.Id(item => item.Id))
					)              
	)
