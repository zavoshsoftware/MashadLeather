@model Models.Blog

@{
    ViewBag.Title = "ویرایش " ;
    Layout = "~/Views/Shared/BackEndLayout/_BackEndLayout.cshtml";
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm("Edit", "Blogs",FormMethod.Post, new { enctype = "multipart/form-data" })) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">        
        <hr />
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Title, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                                  @Html.EditorFor(model => model.Title)
                @Html.ValidationMessageFor(model => model.Title)
            </div>
        </div>

	    <div class="form-group">
		    @Html.LabelFor(model => model.TitleEn, new { @class = "control-label col-md-2" })
		    <div class="col-md-10">
			    @Html.EditorFor(model => model.TitleEn)
			    @Html.ValidationMessageFor(model => model.TitleEn)
		    </div>
	    </div>
        <div class="form-group">
            @Html.LabelFor(model => model.TitleAr, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TitleAr)
                @Html.ValidationMessageFor(model => model.TitleAr)
            </div>
        </div>
			
				
					
	    <div class="form-group">
		    @Html.LabelFor(model => model.BlogGroupId, new { @class = "control-label col-md-2" })
		    <div class="col-md-10">
			    @Html.DropDownList("BlogGroupId", String.Empty)
			    @Html.ValidationMessageFor(model => model.BlogGroupId)
		    </div>
	    </div>


	    <div class="form-group">
		    @Html.LabelFor(model => model.UrlParam, new { @class = "control-label col-md-2" })
		    <div class="col-md-10">
			    @Html.EditorFor(model => model.UrlParam)

			    @Html.ValidationMessageFor(model => model.UrlParam)
			    <dfn> در این پارامتر از کاراکترهای فاصله، _ ؟ ! & و اعداد استفاده کنید</dfn>
		    </div>
	    </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Summery, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                                  @Html.EditorFor(model => model.Summery)
                @Html.ValidationMessageFor(model => model.Summery)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SummeryEn, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                                  @Html.EditorFor(model => model.SummeryEn)
                @Html.ValidationMessageFor(model => model.SummeryEn)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SummeryAr, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SummeryAr)
                @Html.ValidationMessageFor(model => model.SummeryAr)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ImageUrl, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                                  @Html.Kendo().Upload().Name("fileUpload").Multiple(false)
	 @Html.HiddenFor(model => model.ImageUrl)
                @Html.ValidationMessageFor(model => model.ImageUrl)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Body, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                                  @Html.EditorFor(model => model.Body)
                @Html.ValidationMessageFor(model => model.Body)
            </div>
        </div>

        
        <div class="form-group">
            @Html.LabelFor(model => model.BodyEn, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                                  @Html.EditorFor(model => model.BodyEn)
                @Html.ValidationMessageFor(model => model.BodyEn)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BodyAr, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BodyAr)
                @Html.ValidationMessageFor(model => model.BodyAr)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsActive, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                                  @Html.EditorFor(model => model.IsActive)
                @Html.ValidationMessageFor(model => model.IsActive)
            </div>
        </div>

	 @Html.HiddenFor(model => model.CreationDate)
        <div class="form-group">
            @Html.LabelFor(model => model.Description, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                                  @Html.EditorFor(model => model.Description)
                @Html.ValidationMessageFor(model => model.Description)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DescriptionEn, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                                  @Html.EditorFor(model => model.DescriptionEn)
                @Html.ValidationMessageFor(model => model.DescriptionEn)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.DescriptionAr, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DescriptionAr)
                @Html.ValidationMessageFor(model => model.DescriptionAr)
            </div>
        </div>

        <div class="form-group" id="buttons">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="ثبت" class="btn btn-primary" />
				@Html.ActionLink("بازگشت به فهرست", "Index")
            </div>
        </div>
    </div>
}

