@model IEnumerable<Models.Carreer>

@{
ViewBag.Title = "فرم استخدام";
    
    Layout = "~/Views/Shared/BackEndLayout/_BackEndLayout.cshtml";
}

<h2>@ViewBag.Title</h2>

        @(Html.Kendo().Grid(Model)
        .Name("Grid")
        .Columns(columns =>
        {
        columns.Bound(model => model.FullName);
        columns.Bound(model => model.Email);
        columns.Bound(model => model.CellNumber);
        //columns.Bound(model => model.ResumeFile);
        columns.Bound(model => model.NationalCode);
        columns.Bound(model => model.BirthdayDate);
        columns.Bound(model => model.PlaceOfBirth);
        //columns.Bound(model => model.IsLady);
        columns.Bound(model => model.IsMarried);
        //columns.Bound(model => model.ChidNumber);
        //columns.Bound(model => model.PeopleInChargeNumber);
        //columns.Bound(model => model.Nationality);
        //columns.Bound(model => model.Address);
        //columns.Bound(model => model.MilitaryStatus);
        //columns.Bound(model => model.PhysicalCondition);
        //columns.Bound(model => model.IsInsurance);
        //columns.Bound(model => model.DurationInsuranceHistory);
        //columns.Bound(model => model.Education);
        //columns.Bound(model => model.Major);
        //columns.Bound(model => model.LastUniversity);
        //columns.Bound(model => model.LastCertificateDateTime);
        //columns.Bound(model => model.Software);
        //columns.Bound(model => model.Windows);
        //columns.Bound(model => model.OtherSoftware);
        //columns.Bound(model => model.Writing);
        //columns.Bound(model => model.Reading);
        //columns.Bound(model => model.Speaking);
        //columns.Bound(model => model.Listening);
        //columns.Bound(model => model.IntroduceName);
        //columns.Bound(model => model.IntroducePost);
        //columns.Bound(model => model.InterestedJob);
        //columns.Bound(model => model.IsExpectedSalary);
        //columns.Bound(model => model.RequestedPrice);
        //columns.Bound(model => model.HumanResourceinterviewerName);
        //columns.Bound(model => model.HumanResourceinterviewerJob);
        //columns.Bound(model => model.SpecializedInterviewerName);
        //columns.Bound(model => model.SpecializedInterviewerPost);
        //columns.Bound(model => model.IsConfirmed);
        //columns.Bound(model => model.Familiar);
        columns.Bound(model => model.IsActive);
        columns.Bound(model => model.CreationDate);
        columns.Bound(item => @item.Id).Title("دستورات").Filterable(false).Groupable(false)
                      .Template(@<text>
									@Html.ActionLink("ویرایش", "Edit", new {id = @item.Id}, new {@class = "k-button"})
									@Html.ActionLink("حذف", "Delete", new {id = @item.Id}, new {@class = "k-button"})
									</text>).Width(200);  
		})
		.ToolBar(toolbar =>
					{				
						toolbar.Custom().Action("Create","Carreers").Text("افزودن");                          
					}
		)         
		.DataSource(dataSource => dataSource
									.Server()
							
									.Model(model => model.Id(item => item.Id))
					)              
	)
